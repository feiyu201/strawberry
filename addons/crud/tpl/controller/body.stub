<?php
namespace {%ctlSpace%};

use app\common\controller\AddonBase;
use think\facade\View;
use think\facade\Db;

class {%className%} extends {%ctlBase%}
{

    public function initialize(){
		parent::initialize();
        $this->model = new {%modelClassName%}();
    }
    public function index(){
        $extra=[];
        $related_ids = $this->request->param('related_ids','');
        $related_field = $this->request->param('related_field','');

        if($related_ids&&$related_field){
            $extra=["$related_field"=>["in","($related_ids)"]];
        }
        {%viewOption%}assign('related_ids',$related_ids);
        {%viewOption%}assign('related_field',$related_field);
		if(!$this->request->isAjax()){
        	return {%viewOption%}fetch();
		}else{
			return $this->getList($extra);
		}
    }

   public function getList($extra=[]){
   		$page = $this->request->param('page',1,'intval');
   		$limit = $this->request->param('limit',10,'intval');
   		$count = $this->model->count();
   		$data = $this->model->with({%relations%})
		   {%action%}
           ->order('id','desc')
		   ->page($page,$limit)->select();
   		return json([
				'code'=> 0,
				'count'=> $count,
   				'data'=>$data,
   				'msg'=>__('Search successful')
   		]);
   }
   {%functions%}

   public function add(){
	   	if($this->request->isPost()){
	   		$data = $this->request->post();
            {%witchMethod%}
                
	   		if( $this->model->save($data,false)){
	   			$this->success(__('Add successful'));
	   		}else{
	   			$this->error(__('Add failed'));
	   		}
	   	}
		{%addViewCode%}
	   	return {%viewOption%}fetch('edit');
   }


   public function leading(){
   	   	if($this->request->isPost()){
   	   		$file = $_FILES['file'];
   	   		$inputFileName = $file['tmp_name'];
            try {
                ob_end_clean();//清除缓冲区,避免乱码
                $inputFileType = \PhpOffice\PhpSpreadsheet\IOFactory::identify($inputFileName);

                $objReader  = \PhpOffice\PhpSpreadsheet\IOFactory::createReader($inputFileType);

                $objPHPExcel = $objReader->load($inputFileName);
                $sheet = $objPHPExcel->getSheet(0);
                $data = $sheet->toArray(); //该方法读取不到图片，图片需单独处理
                $saveTime=date('Y-m-d');
                $imageFilePath = "./storage/excel/imgs/".$saveTime.'/'; //图片本地存储的路径
                if (!file_exists($imageFilePath)) {
                    mkdir($imageFilePath, 0777, true);
                }
                //处理图片
                foreach ($sheet->getDrawingCollection() as $img) {
                    list($startColumn, $startRow) = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::coordinateFromString($img->getCoordinates()); //获取图片所在行和列
                    $imageFileName = $img->getCoordinates() . mt_rand(1000, 9999);
                    switch($img->getExtension()) {
                        case 'jpg':
                        case 'jpeg':
                            $imageFileName .= '.jpeg';
                            $source = imagecreatefromjpeg($img->getPath());
                            imagejpeg($source, $imageFilePath.$imageFileName);
                            break;
                        case 'gif':
                            $imageFileName .= '.gif';
                            $source = imagecreatefromgif($img->getPath());
                            imagejpeg($source, $imageFilePath.$imageFileName);
                            break;
                        case 'png':
                            $imageFileName .= '.png';
                            $source = imagecreatefrompng($img->getPath());
                            imagejpeg($source, \str_replace('./storage/','',$imageFilePath) .$imageFileName);
                            break;
                    }
                    $startColumn = \hexdec($startColumn);
                    $data[$startRow-1][$startColumn-10] = $imageFilePath . $imageFileName;

                }
            } catch(\Exception $e) {
                 die('加载文件发生错误：”'.pathinfo($inputFileName,PATHINFO_BASENAME).'”: '.$e->getMessage());
            }
            //形成数组
            $excel_data= $data;


            {%excelMethod%}

   	   		if( $insert_result){
   	   			$this->success(__('Add successful'));
   	   		}else{
   	   			$this->error(__('Add failed'));
   	   		}
   	   	}
   		    {%addViewCode%}
   	   	return {%viewOption%}fetch('leading');
     }

   public function edit(){
	   	if($this->request->isPost()){
	   		$data = $this->request->post();
            {%witchMethod%}
            if( $this->model->find($data['id'])->save($data)){
	   			$this->success(__('Editor successful'));
	   		}else{
	   			$this->error(__('Editor failed'));
	   		}
	   	}
	   	$id = $this->request->param('id');
	   	if(!$id){
	   		$this->success(__('Parameter error'));
	   	}
	   	$info =  $this->model->where('id',$id)->find();
   		if(!$info){
	   		$this->success(__('Parameter error'));
	   	}
		{%editViewCode%}
	   	{%viewOption%}assign('{%table%}',$info);
        return {%viewOption%}fetch('edit');
   }

   public function delete(){
   		$idsStr = $this->request->param('idsStr');
   		if(!$idsStr){
   			$this->success(__('Parameter error'));
   		}
   		$pk=$this->model->getPk();
   		if( $this->model->where($pk,'in',$idsStr)->delete()){
   			$this->success(__('Delete successful'));
   		}else{
   			$this->error(__('Delete error'));
   		}
   }

   public function sw(){
      	$data = $this->request->param();
            if( $this->model->where('id',$data['id'])->update($data)){
                 $this->success(__('Editor successful'));
            }else{
                 $this->error(__('Editor failed'));
            }
      }

}
